//framework module CleverTapSDK {
//    header "CleverTap.h"
//    header "CleverTap+Inbox.h"
//    header "CleverTap+FeatureFlags.h"
//    header "CleverTap+ProductConfig.h"
//    header "CleverTap+DisplayUnit.h"
//    header "CleverTap+SSLPinning.h"
//    header "CleverTapBuildInfo.h"
//    header "CleverTapEventDetail.h"
//    header "CleverTapInAppNotificationDelegate.h"
//    header "CleverTapPushNotificationDelegate.h"
//    header "CleverTapURLDelegate.h"
//    header "CleverTapSyncDelegate.h"
//    header "CleverTapUTMDetail.h"
//    header "CleverTapTrackedViewController.h"
//    header "CleverTapInstanceConfig.h"
//    header "CleverTapJSInterface.h"
//    header "CleverTap+InAppNotifications.h"
//    header "CleverTap+SCDomain.h"
//    header "CTLocalInApp.h"
//    header "CleverTap+CTVar.h"
//    header "CTVar.h"
//    header "LeanplumCT.h"
//    header "CTInAppTemplateBuilder.h"
//    header "CTAppFunctionBuilder.h"
//    header "CTTemplatePresenter.h"
//    header "CTTemplateProducer.h"
//    header "CTCustomTemplateBuilder.h"
//    header "CTCustomTemplate.h"
//    header "CTTemplateContext.h"
//    header "CTCustomTemplatesManager.h"
//    header "CleverTap+PushPermission.h"
//    export *
//    
//    //Private headers
//    header "CTRequestFactory.h"
//    header "CTRequest.h"
//
//}


framework module CleverTapSDK {
    umbrella header "CleverTapSDK.h"
    export *
    
    //Private headers
    // If we do this, sdk swift classes can access private objc classes, but clients can access them too. This is a known issue online.
    header "CTRequestFactory.h"
    header "CTRequest.h"
}

// Clients can still access this, but they need to import a new module.
//framework module CleverTapSDK_Private {
//    header "CTRequestFactory.h"
//    export *
//}

module CleverTapSDK.Swift {
  header "CleverTapSDK-Swift.h"
  requires objc
}
